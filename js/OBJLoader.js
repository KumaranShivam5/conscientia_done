THREE.OBJLoader=function(){function t(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(r>=0?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,n,o,h){var l=this.vertices.length,u=this.parseVertexIndex(t,l),c=this.parseVertexIndex(e,l),p=this.parseVertexIndex(r,l);if(this.addVertex(u,c,p),void 0!==i&&""!==i){var m=this.uvs.length;u=this.parseUVIndex(i,m),c=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(u,c,p)}if(void 0!==n&&""!==n){var f=this.normals.length;u=this.parseNormalIndex(n,f),c=n===o?u:this.parseNormalIndex(o,f),p=n===h?u:this.parseNormalIndex(h,f),this.addNormal(u,c,p)}this.colors.length>0&&this.addColor(u,c,p)},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));for(var n=0,a=e.length;n<a;n++)this.addUVLine(this.parseUVIndex(e[n],i))}};return t.startObject("",!1),t}function e(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.materials=null}var r=/^[og]\s*(.+)?/,i=/^mtllib /,s=/^usemtl /;return e.prototype={constructor:e,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(t){e(s.parse(t))},r,i)},setPath:function(t){this.path=t},setMaterials:function(t){return this.materials=t,this},parse:function(e){console.time("OBJLoader");var a=new t;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));for(var n=e.split("\n"),o="",h="",l=[],u="function"==typeof"".trimLeft,c=0,p=n.length;c<p;c++)if(o=n[c],o=u?o.trimLeft():o.trim(),0!==o.length&&"#"!==(h=o.charAt(0)))if("v"===h){var m=o.split(/\s+/);switch(m[0]){case"v":a.vertices.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3])),8===m.length&&a.colors.push(parseFloat(m[4]),parseFloat(m[5]),parseFloat(m[6]));break;case"vn":a.normals.push(parseFloat(m[1]),parseFloat(m[2]),parseFloat(m[3]));break;case"vt":a.uvs.push(parseFloat(m[1]),parseFloat(m[2]))}}else if("f"===h){for(var f=o.substr(1).trim(),d=f.split(/\s+/),v=[],g=0,b=d.length;g<b;g++){var E=d[g];if(E.length>0){var x=E.split("/");v.push(x)}}for(var j=v[0],g=1,b=v.length-1;g<b;g++){var y=v[g],L=v[g+1];a.addFace(j[0],y[0],L[0],j[1],y[1],L[1],j[2],y[2],L[2])}}else if("l"===h){var H=o.substring(1).trim().split(" "),R=[],T=[];if(-1===o.indexOf("/"))R=H;else for(var w=0,V=H.length;w<V;w++){var M=H[w].split("/");""!==M[0]&&R.push(M[0]),""!==M[1]&&T.push(M[1])}a.addLineGeometry(R,T)}else if("p"===h){var f=o.substr(1).trim(),F=f.split(" ");a.addPointGeometry(F)}else if(null!==(l=r.exec(o))){var I=(" "+l[0].substr(1).trim()).substr(1);a.startObject(I)}else if(s.test(o))a.object.startMaterial(o.substring(7).trim(),a.materialLibraries);else if(i.test(o))a.materialLibraries.push(o.substring(7).trim());else{if("s"!==h){if("\0"===o)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+o+'"')}if(l=o.split(" "),l.length>1){var P=l[1].trim().toLowerCase();a.object.smooth="0"!==P&&"off"!==P}else a.object.smooth=!0;var A=a.object.currentMaterial();A&&(A.smooth=a.object.smooth)}a.finalize();var z=new THREE.Group;z.materialLibraries=[].concat(a.materialLibraries);for(var c=0,p=a.objects.length;c<p;c++){var B=a.objects[c],C=B.geometry,O=B.materials,U="Line"===C.type,N="Points"===C.type,G=!1;if(0!==C.vertices.length){var S=new THREE.BufferGeometry;S.addAttribute("position",new THREE.Float32BufferAttribute(C.vertices,3)),C.normals.length>0?S.addAttribute("normal",new THREE.Float32BufferAttribute(C.normals,3)):S.computeVertexNormals(),C.colors.length>0&&(G=!0,S.addAttribute("color",new THREE.Float32BufferAttribute(C.colors,3))),C.uvs.length>0&&S.addAttribute("uv",new THREE.Float32BufferAttribute(C.uvs,2));for(var _=[],D=0,J=O.length;D<J;D++){var k=O[D],A=void 0;if(null!==this.materials)if(A=this.materials.create(k.name),!U||!A||A instanceof THREE.LineBasicMaterial){if(N&&A&&!(A instanceof THREE.PointsMaterial)){var q=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});K.copy(A),A=q}}else{var K=new THREE.LineBasicMaterial;K.copy(A),K.lights=!1,A=K}A||(A=U?new THREE.LineBasicMaterial:N?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial,A.name=k.name),A.flatShading=!k.smooth,A.vertexColors=G?THREE.VertexColors:THREE.NoColors,_.push(A)}var Q;if(_.length>1){for(var D=0,J=O.length;D<J;D++){var k=O[D];S.addGroup(k.groupStart,k.groupCount,D)}Q=U?new THREE.LineSegments(S,_):N?new THREE.Points(S,_):new THREE.Mesh(S,_)}else Q=U?new THREE.LineSegments(S,_[0]):N?new THREE.Points(S,_[0]):new THREE.Mesh(S,_[0]);Q.name=B.name,z.add(Q)}}return console.timeEnd("OBJLoader"),z}},e}();
